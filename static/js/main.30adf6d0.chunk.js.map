{"version":3,"sources":["routes/Home.js","components/Weather.js","components/Seoul.js","components/Jeju.js","components/Gwangju.js","components/Busan.js","App.js","index.js"],"names":["Cities","className","to","Weather","temp","temp_max","temp_min","recentWeather","humidity","description","icon","name","iconcode","wicon","console","log","id","src","alt","title","Math","round","Seoul","props","getWeather","a","axios","get","data","setState","isLoading","state","this","main","weather","React","Component","Jeju","Gwangju","Busan","App","path","exact","component","Home","ReactDOM","render","document","getElementById"],"mappings":"wQAceA,MAXf,WACI,OACI,yBAAKC,UAAU,UACX,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,SAA5B,SACA,kBAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,QAA3B,QACA,kBAAC,IAAD,CAAMC,GAAG,WAAWD,UAAU,WAA9B,WACA,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,SAA5B,W,4DC8BGE,MApCf,YAAwF,IAAtEC,EAAqE,EAArEA,KAAKC,EAAgE,EAAhEA,SAASC,EAAuD,EAAvDA,SAASC,EAA8C,EAA9CA,cAAcC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,YAAYC,EAAW,EAAXA,KAAKC,EAAM,EAANA,KACzEC,EAAU,mCAAmCF,EAAK,OAChDG,EAAMN,EAEZ,OADAO,QAAQC,IAAIF,GACJA,GACJ,IAAK,SACDD,EAAS,8FACT,MACJ,IAAK,QACDA,EAAS,qFACT,MACJ,IAAK,OACDA,EAAS,iGAEjB,OACI,yBAAKX,UAAU,WACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,YAAd,WAAkCU,GAClC,2BAAG,yBAAKK,GAAG,OAAOC,IAAKL,EAAUM,IAAI,eAAeC,MAAOZ,KAC3D,wBAAIN,UAAU,kBAAd,YAAyCM,EAAzC,KAA0DE,EAA1D,KACA,wBAAIR,UAAU,QAAd,gBAAmCmB,KAAKC,MAAMjB,EAAK,KAAnD,UACA,wBAAIH,UAAU,cAAd,kCAA2DmB,KAAKC,MAAMf,EAAS,KAA/E,YAAyFc,KAAKC,MAAMhB,EAAS,KAA7G,UACA,wBAAIJ,UAAU,YAAd,aAAoCO,EAApC,Q,iBCeDc,E,kDAnCb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAQRC,WATkB,sBASN,8BAAAC,EAAA,sEACSC,IAAMC,IAAI,iGADnB,gBACHC,EADG,EACHA,KACP,EAAKC,SAAS,CAACD,OAAME,WAAU,IAFrB,2CAPVhB,QAAQC,IAAI,QACZ,EAAKgB,MAAM,CACTD,WAAU,EACVF,KAAK,IALS,E,8DAaAL,GAChBS,KAAKR,e,+BAEG,IAAD,EACgBQ,KAAKD,MAArBH,EADA,EACAA,KACP,OAFO,EACKE,UAEG,yBAAK7B,UAAU,UAAS,6CACrC,yBAAKA,UAAU,QACd,kBAAC,EAAD,CACGG,KAAMwB,EAAKK,KAAK7B,KAChBC,SAAUuB,EAAKK,KAAK5B,SACpBC,SAAUsB,EAAKK,KAAK3B,SACpBC,cAAeqB,EAAKM,QAAQ,GAAGD,KAC/BzB,SAAUoB,EAAKK,KAAKzB,SACpBC,YAAamB,EAAKM,QAAQ,GAAGzB,YAC7BC,KAAMkB,EAAKM,QAAQ,GAAGxB,KACtBC,KAAMiB,EAAKjB,Y,GA9BDwB,IAAMC,WCoCXC,E,kDAnCb,WAAYd,GAAO,IAAD,8BAChB,cAAMA,IAQRC,WATkB,sBASN,8BAAAC,EAAA,sEACSC,IAAMC,IAAI,gGADnB,gBACHC,EADG,EACHA,KACP,EAAKC,SAAS,CAACD,OAAME,WAAU,IAFrB,2CANV,EAAKC,MAAM,CACTD,WAAU,EACVF,KAAK,IALS,E,8DAaAL,GAChBS,KAAKR,e,+BAEG,IAAD,EACgBQ,KAAKD,MAArBH,EADA,EACAA,KACP,OAFO,EACKE,UAEG,yBAAK7B,UAAU,UAAS,6CACrC,yBAAKA,UAAU,QACd,kBAAC,EAAD,CACGG,KAAMwB,EAAKK,KAAK7B,KAChBC,SAAUuB,EAAKK,KAAK5B,SACpBC,SAAUsB,EAAKK,KAAK3B,SACpBC,cAAeqB,EAAKM,QAAQ,GAAGD,KAC/BzB,SAAUoB,EAAKK,KAAKzB,SACpBC,YAAamB,EAAKM,QAAQ,GAAGzB,YAC7BC,KAAMkB,EAAKM,QAAQ,GAAGxB,KACtBC,KAAMiB,EAAKjB,Y,GA9BFwB,IAAMC,WCoCVE,E,kDAnCb,WAAYf,GAAO,IAAD,8BAChB,cAAMA,IAQRC,WATkB,sBASN,8BAAAC,EAAA,sEACSC,IAAMC,IAAI,mGADnB,gBACHC,EADG,EACHA,KACP,EAAKC,SAAS,CAACD,OAAME,WAAU,IAFrB,2CANV,EAAKC,MAAM,CACTD,WAAU,EACVF,KAAK,IALS,E,8DAaAL,GAChBS,KAAKR,e,+BAEG,IAAD,EACgBQ,KAAKD,MAArBH,EADA,EACAA,KACP,OAFO,EACKE,UAEG,yBAAK7B,UAAU,UAAS,6CACrC,yBAAKA,UAAU,QACd,kBAAC,EAAD,CACGG,KAAMwB,EAAKK,KAAK7B,KAChBC,SAAUuB,EAAKK,KAAK5B,SACpBC,SAAUsB,EAAKK,KAAK3B,SACpBC,cAAeqB,EAAKM,QAAQ,GAAGD,KAC/BzB,SAAUoB,EAAKK,KAAKzB,SACpBC,YAAamB,EAAKM,QAAQ,GAAGzB,YAC7BC,KAAMkB,EAAKM,QAAQ,GAAGxB,KACtBC,KAAMiB,EAAKjB,Y,GA9BCwB,IAAMC,WCoCbG,E,kDAnCb,WAAYhB,GAAO,IAAD,8BAChB,cAAMA,IAQRC,WATkB,sBASN,8BAAAC,EAAA,sEACSC,IAAMC,IAAI,mGADnB,gBACHC,EADG,EACHA,KACP,EAAKC,SAAS,CAACD,OAAME,WAAU,IAFrB,2CANV,EAAKC,MAAM,CACTD,WAAU,EACVF,KAAK,IALS,E,8DAaAL,GAChBS,KAAKR,e,+BAEG,IAAD,EACgBQ,KAAKD,MAArBH,EADA,EACAA,KACP,OAFO,EACKE,UAEG,yBAAK7B,UAAU,UAAS,6CACrC,yBAAKA,UAAU,QACd,kBAAC,EAAD,CACGG,KAAMwB,EAAKK,KAAK7B,KAChBC,SAAUuB,EAAKK,KAAK5B,SACpBC,SAAUsB,EAAKK,KAAK3B,SACpBC,cAAeqB,EAAKM,QAAQ,GAAGD,KAC/BzB,SAAUoB,EAAKK,KAAKzB,SACpBC,YAAamB,EAAKM,QAAQ,GAAGzB,YAC7BC,KAAMkB,EAAKM,QAAQ,GAAGxB,KACtBC,KAAMiB,EAAKjB,Y,GA9BDwB,IAAMC,WCaXI,MAVf,WACE,OAAQ,kBAAC,IAAD,KACN,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWC,IACxC,kBAAC,IAAD,CAAOH,KAAK,SAASE,UAAWrB,IAChC,kBAAC,IAAD,CAAOmB,KAAK,QAAQE,UAAWN,IAC/B,kBAAC,IAAD,CAAOI,KAAK,WAAWE,UAAWL,IAClC,kBAAC,IAAD,CAAOG,KAAK,SAASE,UAAWJ,MCRpCM,IAASC,OACL,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.30adf6d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Home.css'\r\nfunction Cities(){\r\n    return(\r\n        <div className='cities'>\r\n            <Link to='/seoul' className='seoul'>Seoul</Link>\r\n            <Link to='/jeju' className='jeju'>Jeju</Link>\r\n            <Link to='/gwangju' className='gwangju'>Gwangju</Link>\r\n            <Link to='/busan' className='busan'>Busan</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cities;","import React from \"react\"\r\nimport \"./Weather.css\"\r\nimport PropTypes from 'prop-types';\r\nfunction Weather({temp,temp_max,temp_min,recentWeather,humidity,description,icon,name}){\r\n    var iconcode= \"http://openweathermap.org/img/w/\"+icon+\".png\";\r\n    const wicon=recentWeather;\r\n    console.log(wicon);\r\n    switch (wicon){\r\n        case 'Clouds':\r\n            iconcode='https://cdn1.iconfinder.com/data/icons/weather-413/59/Cloud_cloudy_forecast_weather-128.png';\r\n            break;    \r\n        case 'Clear':\r\n            iconcode='https://cdn1.iconfinder.com/data/icons/weather-413/59/forecast_sun_weather-128.png'\r\n            break;\r\n        case 'Rain':\r\n            iconcode='https://cdn1.iconfinder.com/data/icons/weather-413/58/Cloud_drop_forecast_rain_weather-128.png'\r\n    }\r\n    return(\r\n        <div className=\"weather\">\r\n            <div className=\"weather_info\">\r\n                <h2 className=\"location\">This is {name}</h2>\r\n                <p><img id=\"icon\" src={iconcode} alt=\"weather icon\" title={recentWeather}></img></p>\r\n                <h2 className=\"recent_weather\">Weather: {recentWeather} ({description})</h2>\r\n                <h2 className=\"temp\">Temperature: {Math.round(temp-273)}℃</h2>\r\n                <h3 className=\"temp_range\">Range of expected Temperature: {Math.round(temp_min-273)}℃ - {Math.round(temp_max-273)}℃</h3>\r\n                <h2 className=\"humidity\">Humidity: {humidity}%</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nWeather.propTypes={\r\n    temp:PropTypes.number.isRequired,\r\n    temp_min:PropTypes.number.isRequired,\r\n    temp_max:PropTypes.number.isRequired,\r\n    recentWeather:PropTypes.string.isRequired,\r\n    humidity:PropTypes.number.isRequired,\r\n    description:PropTypes.string.isRequired,\r\n}\r\nexport default Weather;","import React from 'react';\r\nimport Weather from \"./Weather\";\r\nimport axios from \"axios\";\r\n\r\nclass Seoul extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    console.log(\"cons\");\r\n    this.state={\r\n      isLoading:true,\r\n      data:{}\r\n    };\r\n  }\r\n\r\n  getWeather= async () =>{\r\n    const {data}=await axios.get(\"http://api.openweathermap.org/data/2.5/weather?q=seoul&appid=20dd54e163bbd3575a7ed6ddb7994735\");\r\n    this.setState({data, isLoading:false});\r\n  };\r\n  componentDidMount(props){\r\n    this.getWeather();\r\n  };\r\n  render() {\r\n    const {data,isLoading}=this.state;\r\n    return (\r\n      isLoading ? (<div className=\"loader\"><span>Loading...</span></div>) :\r\n      <div className=\"data\">\r\n       <Weather \r\n          temp={data.main.temp}\r\n          temp_max={data.main.temp_max}\r\n          temp_min={data.main.temp_min}\r\n          recentWeather={data.weather[0].main}\r\n          humidity={data.main.humidity}\r\n          description={data.weather[0].description}\r\n          icon={data.weather[0].icon}\r\n          name={data.name}\r\n        /> \r\n      </div>\r\n      );\r\n  }\r\n}\r\nexport default Seoul;","import React from 'react';\r\nimport Weather from \"./Weather\";\r\nimport axios from \"axios\";\r\n\r\nclass Jeju extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    //console.log(\"cons\");\r\n    this.state={\r\n      isLoading:true,\r\n      data:{}\r\n    };\r\n  }\r\n\r\n  getWeather= async () =>{\r\n    const {data}=await axios.get(\"http://api.openweathermap.org/data/2.5/weather?q=jeju&appid=20dd54e163bbd3575a7ed6ddb7994735\");\r\n    this.setState({data, isLoading:false});\r\n  };\r\n  componentDidMount(props){\r\n    this.getWeather();\r\n  };\r\n  render() {\r\n    const {data,isLoading}=this.state;\r\n    return (\r\n      isLoading ? (<div className=\"loader\"><span>Loading...</span></div>) :\r\n      <div className=\"data\">\r\n       <Weather \r\n          temp={data.main.temp}\r\n          temp_max={data.main.temp_max}\r\n          temp_min={data.main.temp_min}\r\n          recentWeather={data.weather[0].main}\r\n          humidity={data.main.humidity}\r\n          description={data.weather[0].description}\r\n          icon={data.weather[0].icon}\r\n          name={data.name}\r\n        /> \r\n      </div>\r\n      );\r\n  }\r\n}\r\nexport default Jeju;","import React from 'react';\r\nimport Weather from \"./Weather\";\r\nimport axios from \"axios\";\r\n\r\nclass Gwangju extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    //console.log(\"cons\");\r\n    this.state={\r\n      isLoading:true,\r\n      data:{}\r\n    };\r\n  }\r\n\r\n  getWeather= async () =>{\r\n    const {data}=await axios.get(\"http://api.openweathermap.org/data/2.5/weather?q=gwangju&appid=20dd54e163bbd3575a7ed6ddb7994735\");\r\n    this.setState({data, isLoading:false});\r\n  };\r\n  componentDidMount(props){\r\n    this.getWeather();\r\n  };\r\n  render() {\r\n    const {data,isLoading}=this.state;\r\n    return (\r\n      isLoading ? (<div className=\"loader\"><span>Loading...</span></div>) :\r\n      <div className=\"data\">\r\n       <Weather \r\n          temp={data.main.temp}\r\n          temp_max={data.main.temp_max}\r\n          temp_min={data.main.temp_min}\r\n          recentWeather={data.weather[0].main}\r\n          humidity={data.main.humidity}\r\n          description={data.weather[0].description}\r\n          icon={data.weather[0].icon}\r\n          name={data.name}\r\n        /> \r\n      </div>\r\n      );\r\n  }\r\n}\r\nexport default Gwangju;","import React from 'react';\r\nimport Weather from \"./Weather\";\r\nimport axios from \"axios\";\r\n\r\nclass Busan extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    //console.log(\"cons\");\r\n    this.state={\r\n      isLoading:true,\r\n      data:{}\r\n    };\r\n  }\r\n\r\n  getWeather= async () =>{\r\n    const {data}=await axios.get(\"http://api.openweathermap.org/data/2.5/weather?q=gwangju&appid=20dd54e163bbd3575a7ed6ddb7994735\");\r\n    this.setState({data, isLoading:false});\r\n  };\r\n  componentDidMount(props){\r\n    this.getWeather();\r\n  };\r\n  render() {\r\n    const {data,isLoading}=this.state;\r\n    return (\r\n      isLoading ? (<div className=\"loader\"><span>Loading...</span></div>) :\r\n      <div className=\"data\">\r\n       <Weather \r\n          temp={data.main.temp}\r\n          temp_max={data.main.temp_max}\r\n          temp_min={data.main.temp_min}\r\n          recentWeather={data.weather[0].main}\r\n          humidity={data.main.humidity}\r\n          description={data.weather[0].description}\r\n          icon={data.weather[0].icon}\r\n          name={data.name}\r\n        /> \r\n      </div>\r\n      );\r\n  }\r\n}\r\nexport default Busan;","import React from 'react';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Seoul from \"./components/Seoul\";\nimport Jeju from \"./components/Jeju\";\nimport Gwangju from './components/Gwangju';\nimport Busan from './components/Busan';\nfunction App(){\n  return (<HashRouter>\n    <Route path='/' exact={true} component={Home} />\n    <Route path='/seoul' component={Seoul} />\n    <Route path='/jeju' component={Jeju} />\n    <Route path='/gwangju' component={Gwangju} />\n    <Route path='/busan' component={Busan} />\n  </HashRouter>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,document.getElementById('root')\n);\n"],"sourceRoot":""}